+ implement gettting all rtttl conversion possibilities and create another method that returns the smallest. findAlternateRtttlEncoding()
- implement proper support when converting an invalid frequency to a rtttl note. ie min is 262 while freq is 220.
- Implement relaxed RTTTL format settings:
  + always insert default section values (even if they match official default values)
  + allow clamping from tone() calls to match official rtttl note range
  + allow octave increasing/decreasing to match official rtttl note range
  - allow octave from 1 to 8 instead instead of 4 to 7.
  - allow any bpm values from 1 to 900
- Implement playCppStream(const unsigned short * iStream, const int & iSize);
+ Rename TONE_FREQUENCY_EPSILON to TONE_FREQUENCY_EPSILON
+ Rename validateRtttlFrequencies() to validateRtttlFrequencies(...)
+ Define RTTTL_NOTE::RTTTL_BPM anyBpm for 0 to 900 range and also define BPM_INDEX bpmIdx which matches the first bytes of anyBpm
+ Implement RTTTL_DEFAULT_VALUE_SECTION findBestDefaultValues(unsigned short iBpm, RTTTL_NOTE_LIST iNotes);
+ Implemented remaining RTTTL_RESULT errors
- Renamed function calls with RTTTL in capital letters by Rtttl.
